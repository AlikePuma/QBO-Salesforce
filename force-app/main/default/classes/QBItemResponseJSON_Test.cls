//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

@IsTest
public class QBItemResponseJSON_Test {
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"Item\": {'+
		'    \"FullyQualifiedName\": \"Garden Supplies\", '+
		'    \"domain\": \"QBO\", '+
		'    \"Id\": \"19\", '+
		'    \"Name\": \"Garden Supplies\", '+
		'    \"TrackQtyOnHand\": true, '+
		'    \"UnitPrice\": 0, '+
		'    \"PurchaseCost\": 0, '+
		'    \"QtyOnHand\": 10, '+
		'    \"IncomeAccountRef\": {'+
		'      \"name\": \"Sales of Product Income\", '+
		'      \"value\": \"79\"'+
		'    }, '+
		'    \"AssetAccountRef\": {'+
		'      \"name\": \"Inventory Asset\", '+
		'      \"value\": \"81\"'+
		'    }, '+
		'    \"Taxable\": false, '+
		'    \"sparse\": false, '+
		'    \"Active\": true, '+
		'    \"SyncToken\": \"0\", '+
		'    \"InvStartDate\": \"2015-01-01\", '+
		'    \"Type\": \"Inventory\", '+
		'    \"ExpenseAccountRef\": {'+
		'      \"name\": \"Cost of Goods Sold\", '+
		'      \"value\": \"80\"'+
		'    }, '+
		'    \"MetaData\": {'+
		'      \"CreateTime\": \"2015-12-09T11:12:39-08:00\", '+
		'      \"LastUpdatedTime\": \"2015-12-09T11:12:41-08:00\"'+
		'    }'+
		'  }, '+
		'  \"time\": \"2015-12-09T11:12:39.748-08:00\"'+
		'}';
		QBItemResponseJSON r = QBItemResponseJSON.parse(json);
		System.assert(r != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		QBItemResponseJSON.Item objItem = new QBItemResponseJSON.Item(System.JSON.createParser(json));
		System.assert(objItem != null);
		System.assert(objItem.FullyQualifiedName == null);
		System.assert(objItem.domain == null);
		System.assert(objItem.Id == null);
		System.assert(objItem.Name == null);
		System.assert(objItem.TrackQtyOnHand == null);
		System.assert(objItem.UnitPrice == null);
		System.assert(objItem.PurchaseCost == null);
		System.assert(objItem.QtyOnHand == null);
		System.assert(objItem.IncomeAccountRef == null);
		System.assert(objItem.AssetAccountRef == null);
		System.assert(objItem.Taxable == null);
		System.assert(objItem.sparse == null);
		System.assert(objItem.Active == null);
		System.assert(objItem.SyncToken == null);
		System.assert(objItem.InvStartDate == null);
		System.assert(objItem.Type == null);
		System.assert(objItem.ExpenseAccountRef == null);
		System.assert(objItem.MetaData == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		QBItemResponseJSON.MetaData objMetaData = new QBItemResponseJSON.MetaData(System.JSON.createParser(json));
		System.assert(objMetaData != null);
		System.assert(objMetaData.CreateTime == null);
		System.assert(objMetaData.LastUpdatedTime == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		QBItemResponseJSON objQBItemResponseJSON = new QBItemResponseJSON(System.JSON.createParser(json));
		System.assert(objQBItemResponseJSON != null);
		System.assert(objQBItemResponseJSON.Item == null);
		System.assert(objQBItemResponseJSON.time_Z == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		QBItemResponseJSON.IncomeAccountRef objIncomeAccountRef = new QBItemResponseJSON.IncomeAccountRef(System.JSON.createParser(json));
		System.assert(objIncomeAccountRef != null);
		System.assert(objIncomeAccountRef.name == null);
		System.assert(objIncomeAccountRef.value == null);
	}
}